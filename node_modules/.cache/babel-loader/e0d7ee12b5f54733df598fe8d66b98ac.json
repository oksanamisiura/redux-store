{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/todo-redux/src/components/book-list/book-list.js\";\nimport React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { booksLoaded, booksRequested, booksError } from '../../actions';\nimport compose from '../../utils';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../../components/error-indicator';\nimport './book-list.css';\n\nclass BookList extends Component {\n  componentDidMount() {\n    const {\n      bookstoreService,\n      booksLoaded,\n      booksRequested,\n      booksError\n    } = this.props;\n    booksRequested();\n    bookstoreService.getBooks().then(data => booksLoaded(data)).catch(err => booksError(err));\n  }\n\n  render() {\n    const {\n      books,\n      loading,\n      error\n    } = this.props;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(ErrorIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"book-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, books.map(book => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: book.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(BookListItem, {\n        book: book,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }));\n    }));\n  }\n\n}\n\n;\n\nconst mapStateToProps = ({\n  books,\n  loading,\n  error\n}) => {\n  return {\n    books,\n    loading,\n    error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    booksLoaded,\n    booksRequested,\n    booksError\n  }, dispatch);\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["/Users/a1/Desktop/todo-redux/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","bindActionCreators","connect","withBookstoreService","booksLoaded","booksRequested","booksError","compose","Spinner","ErrorIndicator","BookList","componentDidMount","bookstoreService","props","getBooks","then","data","catch","err","render","books","loading","error","map","book","id","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,QAArC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,UAAtC,QAAwD,eAAxD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAGA,OAAO,iBAAP;;AAEA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAC/BY,EAAAA,iBAAiB,GAAG;AAElB,UAAM;AAAEC,MAAAA,gBAAF;AAAoBR,MAAAA,WAApB;AAAiCC,MAAAA,cAAjC;AAAiDC,MAAAA;AAAjD,QAAgE,KAAKO,KAA3E;AACAR,IAAAA,cAAc;AACdO,IAAAA,gBAAgB,CAACE,QAAjB,GACGC,IADH,CACSC,IAAD,IAAUZ,WAAW,CAACY,IAAD,CAD7B,EAEGC,KAFH,CAEUC,GAAD,IAASZ,UAAU,CAACY,GAAD,CAF5B;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKT,KAAvC;;AAEA,QAAIQ,OAAJ,EAAa;AACX,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,QAAIC,KAAJ,EAAW;AACT,0BAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;AAClB,0BAAQ;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAR;AAGD,KAJD,CAFJ,CADF;AAWD;;AA9B8B;;AA+BhC;;AAED,MAAME,eAAe,GAAG,CAAC;AAAEN,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAA+B;AACrD,SAAO;AACLF,IAAAA,KADK;AAELC,IAAAA,OAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD,CAND;;AAOA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO3B,kBAAkB,CAAC;AACxBG,IAAAA,WADwB;AAExBC,IAAAA,cAFwB;AAGxBC,IAAAA;AAHwB,GAAD,EAItBsB,QAJsB,CAAzB;AAKD,CAND;;AASA,eAAerB,OAAO,CACpBJ,oBAAoB,EADA,EAEpBD,OAAO,CAACwB,eAAD,EAAkBC,kBAAlB,CAFa,CAAP,CAEiCjB,QAFjC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { booksLoaded, booksRequested, booksError } from '../../actions';\nimport compose from '../../utils';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../../components/error-indicator';\n\n\nimport './book-list.css';\n\nclass BookList extends Component {\n  componentDidMount() {\n\n    const { bookstoreService, booksLoaded, booksRequested, booksError } = this.props;\n    booksRequested();\n    bookstoreService.getBooks()\n      .then((data) => booksLoaded(data))\n      .catch((err) => booksError(err));\n  }\n  render() {\n    const { books, loading, error } = this.props;\n\n    if (loading) {\n      return <Spinner />\n    }\n    if (error) {\n      return <ErrorIndicator />;\n    }\n\n    return (\n      <ul className=\"book-list\">\n        {\n          books.map((book) => {\n            return (<li key={book.id}>\n              <BookListItem book={book} />\n            </li>)\n          })\n        }\n      </ul>\n    );\n  }\n};\n\nconst mapStateToProps = ({ books, loading, error }) => {\n  return {\n    books,\n    loading,\n    error\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    booksLoaded,\n    booksRequested,\n    booksError\n  }, dispatch)\n};\n\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps))(BookList);"]},"metadata":{},"sourceType":"module"}