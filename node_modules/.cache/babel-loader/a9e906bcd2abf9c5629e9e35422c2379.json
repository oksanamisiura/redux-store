{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst updateCartItems = (cartItems, item, idx) => {\n  if (item.count === 0) {\n    return [...cartItems.slice(0, idx), ...cartItems.slice(idx + 1)];\n  }\n\n  if (idx === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)];\n};\n\nconst updateCartItem = (book, item = {}, quantity) => {\n  const {\n    id = book.id,\n    count = 0,\n    title = book.title,\n    total = 0\n  } = item;\n  return {\n    id,\n    title,\n    count: count + quantity,\n    total: total + quantity * book.price\n  };\n};\n\nconst updateOrder = (state, bookId, quantity) => {\n  const {\n    books,\n    cartItems\n  } = state;\n  const book = books.find(({\n    id\n  }) => id === bookId);\n  const itemIndex = cartItems.findIndex(({\n    id\n  }) => id === bookId);\n  const item = cartItems[itemIndex];\n  const newItem = updateCartItem(book, item, quantity);\n  return { ...state,\n    cartItems: updateCartItems(cartItems, newItem, itemIndex)\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      return updateOrder(state, action.payload, 1);\n\n    case 'BOOK_REMOVED_FROM_CART':\n      return updateOrder(state, action.payload, -1);\n\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n      const item = state.cartItems.find(({\n        id\n      }) => id === action.payload);\n      return updateOrder(state, action.payload, -item.count);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/a1/Desktop/todo-redux/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","item","idx","count","slice","updateCartItem","book","quantity","id","title","total","price","updateOrder","state","bookId","find","itemIndex","findIndex","newItem","reducer","action","type","payload"],"mappings":"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","sourcesContent":["const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst updateCartItems = (cartItems, item, idx) => {\n\n  if (item.count === 0) {\n    return [\n      ...cartItems.slice(0, idx),\n      ...cartItems.slice(idx + 1)\n    ];\n  }\n\n  if (idx === -1) {\n    return [\n      ...cartItems,\n      item\n    ];\n  }\n\n  return [\n    ...cartItems.slice(0, idx),\n    item,\n    ...cartItems.slice(idx + 1)\n  ];\n};\n\nconst updateCartItem = (book, item = {}, quantity) => {\n\n  const {\n    id = book.id,\n    count = 0,\n    title = book.title,\n    total = 0 } = item;\n\n  return {\n    id,\n    title,\n    count: count + quantity,\n    total: total + quantity * book.price\n  };\n};\n\nconst updateOrder = (state, bookId, quantity) => {\n  const { books, cartItems } = state;\n\n  const book = books.find(({ id }) => id === bookId);\n  const itemIndex = cartItems.findIndex(({ id }) => id === bookId);\n  const item = cartItems[itemIndex];\n\n  const newItem = updateCartItem(book, item, quantity);\n  return {\n    ...state,\n    cartItems: updateCartItems(cartItems, newItem, itemIndex)\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      return updateOrder(state, action.payload, 1);\n\n    case 'BOOK_REMOVED_FROM_CART':\n      return updateOrder(state, action.payload, -1);\n\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n      const item = state.cartItems.find(({ id }) => id === action.payload);\n      return updateOrder(state, action.payload, -item.count);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}