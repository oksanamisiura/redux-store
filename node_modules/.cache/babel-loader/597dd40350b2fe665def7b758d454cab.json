{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/todo-redux/src/components/book-list/book-list.js\";\nimport React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks } from '../../actions';\nimport compose from '../../utils';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../../components/error-indicator';\nimport './book-list.css';\n\nconst BookList = ({\n  books\n}) => {\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, books.map(book => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: book.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(BookListItem, {\n      book: book,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }));\n  }));\n};\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n    const {\n      books,\n      loading,\n      error\n    } = this.props;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(ErrorIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"book-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, books.map(book => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: book.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(BookListItem, {\n        book: book,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }));\n    }));\n  }\n\n}\n\n;\n\nconst mapStateToProps = ({\n  books,\n  loading,\n  error\n}) => {\n  return {\n    books,\n    loading,\n    error\n  };\n};\n\nconst mapDispatchToProps = (dispatch, {\n  bookstoreService\n}) => {\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch)\n  };\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookListContainer);","map":{"version":3,"sources":["/Users/a1/Desktop/todo-redux/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","bindActionCreators","connect","withBookstoreService","fetchBooks","compose","Spinner","ErrorIndicator","BookList","books","map","book","id","BookListContainer","componentDidMount","props","render","loading","error","mapStateToProps","mapDispatchToProps","dispatch","bookstoreService"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,QAArC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAGA,OAAO,iBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9B,sBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAClB,wBAAQ;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,CAAR;AAGD,GAJD,CAFJ,CADF;AAWD,CAZD;;AAeA,MAAME,iBAAN,SAAgCd,SAAhC,CAA0C;AACxCe,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWX,UAAX;AACD;;AACDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,KAAF;AAASQ,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKH,KAAvC;;AAEA,QAAIE,OAAJ,EAAa;AACX,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,QAAIC,KAAJ,EAAW;AACT,0BAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIT,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAClB,0BAAQ;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAR;AAGD,KAJD,CAFJ,CADF;AAWD;;AAzBuC;;AA0BzC;;AAED,MAAMQ,eAAe,GAAG,CAAC;AAAEV,EAAAA,KAAF;AAASQ,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAA+B;AACrD,SAAO;AACLT,IAAAA,KADK;AAELQ,IAAAA,OAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD,CAND;;AAOA,MAAME,kBAAkB,GAAG,CAACC,QAAD,EAAW;AAAEC,EAAAA;AAAF,CAAX,KAAoC;AAC7D,SAAO;AACLlB,IAAAA,UAAU,EAAEA,UAAU,CAACkB,gBAAD,EAAmBD,QAAnB;AADjB,GAAP;AAGD,CAJD;;AAOA,eAAehB,OAAO,CACpBF,oBAAoB,EADA,EAEpBD,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAFa,CAAP,CAEiCP,iBAFjC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks } from '../../actions';\nimport compose from '../../utils';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../../components/error-indicator';\n\n\nimport './book-list.css';\n\nconst BookList = ({ books }) => {\n  return (\n    <ul className=\"book-list\">\n      {\n        books.map((book) => {\n          return (<li key={book.id}>\n            <BookListItem book={book} />\n          </li>)\n        })\n      }\n    </ul>\n  );\n}\n\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n  render() {\n    const { books, loading, error } = this.props;\n\n    if (loading) {\n      return <Spinner />\n    }\n    if (error) {\n      return <ErrorIndicator />;\n    }\n\n    return (\n      <ul className=\"book-list\">\n        {\n          books.map((book) => {\n            return (<li key={book.id}>\n              <BookListItem book={book} />\n            </li>)\n          })\n        }\n      </ul>\n    );\n  }\n};\n\nconst mapStateToProps = ({ books, loading, error }) => {\n  return {\n    books,\n    loading,\n    error\n  }\n};\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch)\n  }\n};\n\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps))(BookListContainer);"]},"metadata":{},"sourceType":"module"}