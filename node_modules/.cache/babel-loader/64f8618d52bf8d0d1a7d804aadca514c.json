{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find(book => book.id === bookId);\n      const itemItem = state.cartItems.findIndex(({\n        id\n      }) => id === bookId);\n      const item = state.cartItems[itemIndex];\n\n      if (item) {\n        newItem = { ...item,\n          count: state.count + 1,\n          total: item.total + book.price\n        };\n      } else {\n        newItem = {\n          id: book.id,\n          name: book.name,\n          count: 1,\n          total: book.price\n        };\n      }\n\n      ;\n\n      if (itemIndex < 0) {\n        return { ...state,\n          cartItems: [...state.cartItems, newItem]\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems.slice(0, itemindex), newItem, ...state.cartItems.slice(itemIndex + 1)]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/a1/Desktop/todo-redux/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","reducer","state","action","console","log","type","payload","bookId","book","find","id","itemItem","findIndex","item","itemIndex","newItem","count","total","price","name","slice","itemindex"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,SAAS,EAAE,EAJQ;AAKnBC,EAAAA,UAAU,EAAE;AALO,CAArB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAEhDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,UAAQH,MAAM,CAACG,IAAf;AACE,SAAK,qBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELN,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,OAAO,EAAE,IAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELN,QAAAA,KAAK,EAAEO,MAAM,CAACI,OAFT;AAGLV,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELN,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAEK,MAAM,CAACI;AAJT,OAAP;;AAMF,SAAK,oBAAL;AACE,YAAMC,MAAM,GAAGL,MAAM,CAACI,OAAtB;AACA,YAAME,IAAI,GAAGP,KAAK,CAACN,KAAN,CAAYc,IAAZ,CAAkBD,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYH,MAAvC,CAAb;AACA,YAAMI,QAAQ,GAAGV,KAAK,CAACH,SAAN,CAAgBc,SAAhB,CAA0B,CAAC;AAAEF,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKH,MAA7C,CAAjB;AACA,YAAMM,IAAI,GAAGZ,KAAK,CAACH,SAAN,CAAgBgB,SAAhB,CAAb;;AAEA,UAAID,IAAJ,EAAU;AACRE,QAAAA,OAAO,GAAG,EACR,GAAGF,IADK;AAERG,UAAAA,KAAK,EAAEf,KAAK,CAACe,KAAN,GAAc,CAFb;AAGRC,UAAAA,KAAK,EAAEJ,IAAI,CAACI,KAAL,GAAaT,IAAI,CAACU;AAHjB,SAAV;AAKD,OAND,MAMO;AACLH,QAAAA,OAAO,GAAG;AACRL,UAAAA,EAAE,EAAEF,IAAI,CAACE,EADD;AAERS,UAAAA,IAAI,EAAEX,IAAI,CAACW,IAFH;AAGRH,UAAAA,KAAK,EAAE,CAHC;AAIRC,UAAAA,KAAK,EAAET,IAAI,CAACU;AAJJ,SAAV;AAMD;;AAAA;;AACD,UAAIJ,SAAS,GAAG,CAAhB,EAAmB;AACjB,eAAO,EACL,GAAGb,KADE;AAELH,UAAAA,SAAS,EAAE,CACT,GAAGG,KAAK,CAACH,SADA,EAETiB,OAFS;AAFN,SAAP;AAOD,OARD,MAQO;AACL,eAAO,EACL,GAAGd,KADE;AAELH,UAAAA,SAAS,EAAE,CACT,GAAGG,KAAK,CAACH,SAAN,CAAgBsB,KAAhB,CAAsB,CAAtB,EAAyBC,SAAzB,CADM,EAETN,OAFS,EAGT,GAAGd,KAAK,CAACH,SAAN,CAAgBsB,KAAhB,CAAsBN,SAAS,GAAG,CAAlC,CAHM;AAFN,SAAP;AAQD;;AAGH;AACE,aAAOb,KAAP;AA/DJ;AAiED,CApED;;AAsEA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst reducer = (state = initialState, action) => {\n\n  console.log(action.type);\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n    case 'BOOK_ADDED_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find((book) => book.id === bookId);\n      const itemItem = state.cartItems.findIndex(({ id }) => id === bookId);\n      const item = state.cartItems[itemIndex];\n\n      if (item) {\n        newItem = {\n          ...item,\n          count: state.count + 1,\n          total: item.total + book.price\n        };\n      } else {\n        newItem = {\n          id: book.id,\n          name: book.name,\n          count: 1,\n          total: book.price\n        }\n      };\n      if (itemIndex < 0) {\n        return {\n          ...state,\n          cartItems: [\n            ...state.cartItems,\n            newItem\n          ]\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [\n            ...state.cartItems.slice(0, itemindex),\n            newItem,\n            ...state.cartItems.slice(itemIndex + 1)\n          ]\n        };\n      }\n\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}