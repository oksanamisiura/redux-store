{"ast":null,"code":"// const initialState = {\n//   books: [],\n//   loading: true,\n//   error: null,\n//   cartItems: [],\n//   orderTotal: 220\n// };\n// const reducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case 'FETCH_BOOKS_REQUEST':\n//       return {\n//         ...state,\n//         books: [],\n//         loading: true,\n//         error: null\n//       };\n//     case 'FETCH_BOOKS_SUCCESS':\n//       return {\n//         ...state,\n//         books: action.payload,\n//         loading: false,\n//         error: null\n//       };\n//     case 'FETCH_BOOKS_FAILURE':\n//       return {\n//         ...state,\n//         books: [],\n//         loading: false,\n//         error: action.payload\n//       };\n//     case 'BOOK_ADDED_TO_CART':\n//       const bookId = action.payload;\n//       const book = state.books.find((book) => book.id === bookId);\n//       const itemIndex = state.cartItems.findIndex(({ id }) => id === bookId);\n//       const item = state.cartItems[itemIndex];\n//       const newItem = {\n//         id: book.id,\n//         name: book.title,\n//         count: 1,\n//         total: book.price\n//       }\n//       if (item) {\n//         newItem = {\n//           ...item,\n//           count: state.count + 1,\n//           total: item.total + book.price\n//         };\n//       } else {\n//         newItem = {\n//           id: book.id,\n//           name: book.name,\n//           count: 1,\n//           total: book.price\n//         }\n//       };\n//       if (itemIndex < 0) {\n//         return {\n//           ...state,\n//           cartItems: [\n//             ...state.cartItems,\n//             newItem\n//           ]\n//         };\n//       } else {\n//         return {\n//           ...state,\n//           cartItems: [\n//             ...state.cartItems.slice(0, itemindex),\n//             newItem,\n//             ...state.cartItems.slice(itemIndex + 1)\n//           ]\n//         };\n//       }\n//     default:\n//       return state;\n//   }\n// };\n// export default reducer;","map":{"version":3,"sources":["/Users/a1/Desktop/todo-redux/src/reducers/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA","sourcesContent":["// const initialState = {\n//   books: [],\n//   loading: true,\n//   error: null,\n//   cartItems: [],\n//   orderTotal: 220\n// };\n\n// const reducer = (state = initialState, action) => {\n\n//   switch (action.type) {\n//     case 'FETCH_BOOKS_REQUEST':\n//       return {\n//         ...state,\n//         books: [],\n//         loading: true,\n//         error: null\n//       };\n//     case 'FETCH_BOOKS_SUCCESS':\n//       return {\n//         ...state,\n//         books: action.payload,\n//         loading: false,\n//         error: null\n//       };\n//     case 'FETCH_BOOKS_FAILURE':\n//       return {\n//         ...state,\n//         books: [],\n//         loading: false,\n//         error: action.payload\n//       };\n//     case 'BOOK_ADDED_TO_CART':\n//       const bookId = action.payload;\n//       const book = state.books.find((book) => book.id === bookId);\n//       const itemIndex = state.cartItems.findIndex(({ id }) => id === bookId);\n//       const item = state.cartItems[itemIndex];\n//       const newItem = {\n//         id: book.id,\n//         name: book.title,\n//         count: 1,\n//         total: book.price\n//       }\n\n//       if (item) {\n//         newItem = {\n//           ...item,\n//           count: state.count + 1,\n//           total: item.total + book.price\n//         };\n//       } else {\n//         newItem = {\n//           id: book.id,\n//           name: book.name,\n//           count: 1,\n//           total: book.price\n//         }\n//       };\n//       if (itemIndex < 0) {\n//         return {\n//           ...state,\n//           cartItems: [\n//             ...state.cartItems,\n//             newItem\n//           ]\n//         };\n//       } else {\n//         return {\n//           ...state,\n//           cartItems: [\n//             ...state.cartItems.slice(0, itemindex),\n//             newItem,\n//             ...state.cartItems.slice(itemIndex + 1)\n//           ]\n//         };\n//       }\n\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default reducer;"]},"metadata":{},"sourceType":"module"}