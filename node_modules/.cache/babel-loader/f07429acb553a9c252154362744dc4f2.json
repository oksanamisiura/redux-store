{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst updateCartItems = (cartItems, item, idx) => {\n  if (idx === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)];\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find(book => book.id === bookId);\n      const itemIndex = state.cartItems.findIndex(({\n        id\n      }) => id === bookId);\n      const item = state.cartItems[itemIndex];\n      let newItem;\n\n      if (item) {\n        newItem = { ...item,\n          count: item.count + 1,\n          total: item.total + book.price\n        };\n      } else {\n        newItem = {\n          id: book.id,\n          name: book.name,\n          count: 1,\n          total: book.price\n        };\n      }\n\n      ;\n\n      if (itemIndex < 0) {\n        return { ...state,\n          cartItems: [...state.cartItems, newItem]\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems.slice(0, itemIndex), newItem, ...state.cartItems.slice(itemIndex + 1)]\n        };\n      }\n\n    case 'BOOK_REMOVED_FROM_CART':\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/a1/Desktop/todo-redux/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","item","idx","slice","reducer","state","action","type","payload","bookId","book","find","id","itemIndex","findIndex","newItem","count","total","price","name"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,SAAS,EAAE,EAJQ;AAKnBC,EAAAA,UAAU,EAAE;AALO,CAArB;;AAOA,MAAMC,eAAe,GAAG,CAACF,SAAD,EAAYG,IAAZ,EAAkBC,GAAlB,KAA0B;AAChD,MAAIA,GAAG,KAAK,CAAC,CAAb,EAAgB;AACd,WAAO,CACL,GAAGJ,SADE,EAELG,IAFK,CAAP;AAID;;AACD,SAAO,CACL,GAAGH,SAAS,CAACK,KAAV,CAAgB,CAAhB,EAAmBD,GAAnB,CADE,EAELD,IAFK,EAGL,GAAGH,SAAS,CAACK,KAAV,CAAgBD,GAAG,GAAG,CAAtB,CAHE,CAAP;AAKD,CAZD;;AAcA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAEhD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELV,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,OAAO,EAAE,IAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELV,QAAAA,KAAK,EAAEW,MAAM,CAACE,OAFT;AAGLZ,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELV,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAES,MAAM,CAACE;AAJT,OAAP;;AAMF,SAAK,oBAAL;AACE,YAAMC,MAAM,GAAGH,MAAM,CAACE,OAAtB;AACA,YAAME,IAAI,GAAGL,KAAK,CAACV,KAAN,CAAYgB,IAAZ,CAAkBD,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYH,MAAvC,CAAb;AACA,YAAMI,SAAS,GAAGR,KAAK,CAACP,SAAN,CAAgBgB,SAAhB,CAA0B,CAAC;AAAEF,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKH,MAA7C,CAAlB;AACA,YAAMR,IAAI,GAAGI,KAAK,CAACP,SAAN,CAAgBe,SAAhB,CAAb;AAEA,UAAIE,OAAJ;;AAEA,UAAId,IAAJ,EAAU;AACRc,QAAAA,OAAO,GAAG,EACR,GAAGd,IADK;AAERe,UAAAA,KAAK,EAAEf,IAAI,CAACe,KAAL,GAAa,CAFZ;AAGRC,UAAAA,KAAK,EAAEhB,IAAI,CAACgB,KAAL,GAAaP,IAAI,CAACQ;AAHjB,SAAV;AAKD,OAND,MAMO;AACLH,QAAAA,OAAO,GAAG;AACRH,UAAAA,EAAE,EAAEF,IAAI,CAACE,EADD;AAERO,UAAAA,IAAI,EAAET,IAAI,CAACS,IAFH;AAGRH,UAAAA,KAAK,EAAE,CAHC;AAIRC,UAAAA,KAAK,EAAEP,IAAI,CAACQ;AAJJ,SAAV;AAMD;;AAAA;;AAGD,UAAIL,SAAS,GAAG,CAAhB,EAAmB;AACjB,eAAO,EACL,GAAGR,KADE;AAELP,UAAAA,SAAS,EAAE,CACT,GAAGO,KAAK,CAACP,SADA,EAETiB,OAFS;AAFN,SAAP;AAOD,OARD,MAQO;AACL,eAAO,EACL,GAAGV,KADE;AAELP,UAAAA,SAAS,EAAE,CACT,GAAGO,KAAK,CAACP,SAAN,CAAgBK,KAAhB,CAAsB,CAAtB,EAAyBU,SAAzB,CADM,EAETE,OAFS,EAGT,GAAGV,KAAK,CAACP,SAAN,CAAgBK,KAAhB,CAAsBU,SAAS,GAAG,CAAlC,CAHM;AAFN,SAAP;AAQD;;AAEH,SAAK,wBAAL;AAEA,SAAK,6BAAL;AACA;AACE,aAAOR,KAAP;AArEJ;AAuED,CAzED;;AA2EA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\nconst updateCartItems = (cartItems, item, idx) => {\n  if (idx === -1) {\n    return [\n      ...cartItems,\n      item\n    ];\n  }\n  return [\n    ...cartItems.slice(0, idx),\n    item,\n    ...cartItems.slice(idx + 1)\n  ];\n};\n\nconst reducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n    case 'BOOK_ADDED_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find((book) => book.id === bookId);\n      const itemIndex = state.cartItems.findIndex(({ id }) => id === bookId);\n      const item = state.cartItems[itemIndex];\n\n      let newItem;\n\n      if (item) {\n        newItem = {\n          ...item,\n          count: item.count + 1,\n          total: item.total + book.price\n        };\n      } else {\n        newItem = {\n          id: book.id,\n          name: book.name,\n          count: 1,\n          total: book.price\n        }\n      };\n\n\n      if (itemIndex < 0) {\n        return {\n          ...state,\n          cartItems: [\n            ...state.cartItems,\n            newItem\n          ]\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [\n            ...state.cartItems.slice(0, itemIndex),\n            newItem,\n            ...state.cartItems.slice(itemIndex + 1)\n          ]\n        };\n      }\n\n    case 'BOOK_REMOVED_FROM_CART':\n\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}