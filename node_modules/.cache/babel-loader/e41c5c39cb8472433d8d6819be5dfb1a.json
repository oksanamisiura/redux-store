{"ast":null,"code":"const booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST'\n  };\n};\n\nconst booksLoaded = newBooks => {\n  return {\n    type: \"FETCH_BOOKS_SUCCESS\",\n    payload: newBooks\n  };\n};\n\nconst booksError = error => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error\n  };\n};\n\nconst bookAddedToCart = bookId => {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: bookId\n  };\n};\n\nconst bookRemovedFromCart = bookId => {\n  return {\n    type: 'BOOK_REMOVED_FROM_CART',\n    payload: bookId\n  };\n};\n\nconst fetchBooks = (bookstoreService, dispatch) => () => {\n  dispatch(booksRequested());\n  bookstoreService.getBooks().then(data => dispatch(booksLoaded(data))).catch(err => dispatch(booksError(err)));\n};\n\nexport { fetchBooks, bookAddedToCart };","map":{"version":3,"sources":["/Users/a1/Desktop/todo-redux/src/actions/index.js"],"names":["booksRequested","type","booksLoaded","newBooks","payload","booksError","error","bookAddedToCart","bookId","bookRemovedFromCart","fetchBooks","bookstoreService","dispatch","getBooks","then","data","catch","err"],"mappings":"AACA,MAAMA,cAAc,GAAG,MAAM;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLF,IAAAA,IAAI,EAAE,qBADD;AAELG,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALD;;AAOA,MAAME,UAAU,GAAIC,KAAD,IAAW;AAC5B,SAAO;AACLL,IAAAA,IAAI,EAAE,qBADD;AAELG,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMC,eAAe,GAAIC,MAAD,IAAY;AAClC,SAAO;AACLP,IAAAA,IAAI,EAAE,oBADD;AAELG,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMC,mBAAmB,GAAID,MAAD,IAAY;AACtC,SAAO;AACLP,IAAAA,IAAI,EAAE,wBADD;AAELG,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALD;;AAOA,MAAME,UAAU,GAAG,CAACC,gBAAD,EAAmBC,QAAnB,KAAgC,MAAM;AACvDA,EAAAA,QAAQ,CAACZ,cAAc,EAAf,CAAR;AACAW,EAAAA,gBAAgB,CAACE,QAAjB,GACGC,IADH,CACSC,IAAD,IAAUH,QAAQ,CAACV,WAAW,CAACa,IAAD,CAAZ,CAD1B,EAEGC,KAFH,CAEUC,GAAD,IAASL,QAAQ,CAACP,UAAU,CAACY,GAAD,CAAX,CAF1B;AAGD,CALD;;AAMA,SACEP,UADF,EACcH,eADd","sourcesContent":["\nconst booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST'\n  };\n};\n\nconst booksLoaded = (newBooks) => {\n  return {\n    type: \"FETCH_BOOKS_SUCCESS\",\n    payload: newBooks\n  };\n};\n\nconst booksError = (error) => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error\n  };\n};\nconst bookAddedToCart = (bookId) => {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: bookId\n  };\n};\nconst bookRemovedFromCart = (bookId) => {\n  return {\n    type: 'BOOK_REMOVED_FROM_CART',\n    payload: bookId\n  };\n};\n\nconst fetchBooks = (bookstoreService, dispatch) => () => {\n  dispatch(booksRequested());\n  bookstoreService.getBooks()\n    .then((data) => dispatch(booksLoaded(data)))\n    .catch((err) => dispatch(booksError(err)));\n}\nexport {\n  fetchBooks, bookAddedToCart\n};"]},"metadata":{},"sourceType":"module"}