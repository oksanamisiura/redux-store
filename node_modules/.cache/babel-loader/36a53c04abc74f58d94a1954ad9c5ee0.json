{"ast":null,"code":"import BookstoreService from \"../services/bookstore-service\";\n\nconst booksLoaded = newBooks => {\n  return {\n    type: \"BOOKS_LOADED\",\n    payload: newBooks\n  };\n};\n\nconst booksRequested = () => {\n  return {\n    type: 'BOOKS_REQUESTED'\n  };\n};\n\nconst booksError = error => {\n  return {\n    type: 'BOOKS_ERROR',\n    payload: error\n  };\n};\n\nconst fetchBooks = () => {\n  dispatchEvent(booksRequested());\n  BookstoreService.getBooks().then(data => dispatch(booksLoaded(data))).catch(err => dispatch(boooksError(err)));\n};\n\nexport { booksLoaded, booksRequested, booksError };","map":{"version":3,"sources":["/Users/a1/Desktop/todo-redux/src/actions/index.js"],"names":["BookstoreService","booksLoaded","newBooks","type","payload","booksRequested","booksError","error","fetchBooks","dispatchEvent","getBooks","then","data","dispatch","catch","err","boooksError"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,+BAA7B;;AAEA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAE,cADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMG,cAAc,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC5B,SAAO;AACLJ,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMC,UAAU,GAAG,MAAM;AACvBC,EAAAA,aAAa,CAACJ,cAAc,EAAf,CAAb;AACAL,EAAAA,gBAAgB,CAACU,QAAjB,GACGC,IADH,CACSC,IAAD,IAAUC,QAAQ,CAACZ,WAAW,CAACW,IAAD,CAAZ,CAD1B,EAEGE,KAFH,CAEUC,GAAD,IAASF,QAAQ,CAACG,WAAW,CAACD,GAAD,CAAZ,CAF1B;AAGD,CALD;;AAMA,SACEd,WADF,EAEEI,cAFF,EAGEC,UAHF","sourcesContent":["import BookstoreService from \"../services/bookstore-service\";\n\nconst booksLoaded = (newBooks) => {\n  return {\n    type: \"BOOKS_LOADED\",\n    payload: newBooks\n  };\n};\n\nconst booksRequested = () => {\n  return {\n    type: 'BOOKS_REQUESTED'\n  };\n};\n\nconst booksError = (error) => {\n  return {\n    type: 'BOOKS_ERROR',\n    payload: error\n  };\n};\n\nconst fetchBooks = () => {\n  dispatchEvent(booksRequested());\n  BookstoreService.getBooks()\n    .then((data) => dispatch(booksLoaded(data)))\n    .catch((err) => dispatch(boooksError(err)))\n}\nexport {\n  booksLoaded,\n  booksRequested,\n  booksError\n};"]},"metadata":{},"sourceType":"module"}