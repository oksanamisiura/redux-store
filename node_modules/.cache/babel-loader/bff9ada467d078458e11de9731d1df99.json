{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst updateCartItems = (cartItems, item, idx) => {\n  if (idx === -1) {\n    return [...cartItems, item];\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find(book => book.id === bookId);\n      const itemIndex = state.cartItems.findIndex(({\n        id\n      }) => id === bookId);\n      const item = state.cartItems[itemIndex];\n      let newItem;\n\n      if (item) {\n        newItem = { ...item,\n          count: state.count + 1,\n          total: item.total + book.price\n        };\n      } else {\n        newItem = {\n          id: book.id,\n          name: book.name,\n          count: 1,\n          total: book.price\n        };\n      }\n\n      ;\n\n      if (itemIndex < 0) {\n        return { ...state,\n          cartItems: [...state.cartItems, newItem]\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems.slice(0, itemIndex), newItem, ...state.cartItems.slice(itemIndex + 1)]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/a1/Desktop/todo-redux/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","item","idx","reducer","state","action","type","payload","bookId","book","find","id","itemIndex","findIndex","newItem","count","total","price","name","slice"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,SAAS,EAAE,EAJQ;AAKnBC,EAAAA,UAAU,EAAE;AALO,CAArB;;AAOA,MAAMC,eAAe,GAAG,CAACF,SAAD,EAAYG,IAAZ,EAAkBC,GAAlB,KAA0B;AAChD,MAAIA,GAAG,KAAK,CAAC,CAAb,EAAgB;AACd,WAAO,CACL,GAAGJ,SADE,EAELG,IAFK,CAAP;AAID;AACF,CAPD;;AASA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAEhD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELT,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,OAAO,EAAE,IAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELT,QAAAA,KAAK,EAAEU,MAAM,CAACE,OAFT;AAGLX,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELT,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAEQ,MAAM,CAACE;AAJT,OAAP;;AAMF,SAAK,oBAAL;AACE,YAAMC,MAAM,GAAGH,MAAM,CAACE,OAAtB;AACA,YAAME,IAAI,GAAGL,KAAK,CAACT,KAAN,CAAYe,IAAZ,CAAkBD,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYH,MAAvC,CAAb;AACA,YAAMI,SAAS,GAAGR,KAAK,CAACN,SAAN,CAAgBe,SAAhB,CAA0B,CAAC;AAAEF,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKH,MAA7C,CAAlB;AACA,YAAMP,IAAI,GAAGG,KAAK,CAACN,SAAN,CAAgBc,SAAhB,CAAb;AAEA,UAAIE,OAAJ;;AAEA,UAAIb,IAAJ,EAAU;AACRa,QAAAA,OAAO,GAAG,EACR,GAAGb,IADK;AAERc,UAAAA,KAAK,EAAEX,KAAK,CAACW,KAAN,GAAc,CAFb;AAGRC,UAAAA,KAAK,EAAEf,IAAI,CAACe,KAAL,GAAaP,IAAI,CAACQ;AAHjB,SAAV;AAKD,OAND,MAMO;AACLH,QAAAA,OAAO,GAAG;AACRH,UAAAA,EAAE,EAAEF,IAAI,CAACE,EADD;AAERO,UAAAA,IAAI,EAAET,IAAI,CAACS,IAFH;AAGRH,UAAAA,KAAK,EAAE,CAHC;AAIRC,UAAAA,KAAK,EAAEP,IAAI,CAACQ;AAJJ,SAAV;AAMD;;AAAA;;AAGD,UAAIL,SAAS,GAAG,CAAhB,EAAmB;AACjB,eAAO,EACL,GAAGR,KADE;AAELN,UAAAA,SAAS,EAAE,CACT,GAAGM,KAAK,CAACN,SADA,EAETgB,OAFS;AAFN,SAAP;AAOD,OARD,MAQO;AACL,eAAO,EACL,GAAGV,KADE;AAELN,UAAAA,SAAS,EAAE,CACT,GAAGM,KAAK,CAACN,SAAN,CAAgBqB,KAAhB,CAAsB,CAAtB,EAAyBP,SAAzB,CADM,EAETE,OAFS,EAGT,GAAGV,KAAK,CAACN,SAAN,CAAgBqB,KAAhB,CAAsBP,SAAS,GAAG,CAAlC,CAHM;AAFN,SAAP;AAQD;;AAGH;AACE,aAAOR,KAAP;AAnEJ;AAqED,CAvED;;AAyEA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\nconst updateCartItems = (cartItems, item, idx) => {\n  if (idx === -1) {\n    return [\n      ...cartItems,\n      item\n    ];\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n    case 'BOOK_ADDED_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find((book) => book.id === bookId);\n      const itemIndex = state.cartItems.findIndex(({ id }) => id === bookId);\n      const item = state.cartItems[itemIndex];\n\n      let newItem;\n\n      if (item) {\n        newItem = {\n          ...item,\n          count: state.count + 1,\n          total: item.total + book.price\n        };\n      } else {\n        newItem = {\n          id: book.id,\n          name: book.name,\n          count: 1,\n          total: book.price\n        }\n      };\n\n\n      if (itemIndex < 0) {\n        return {\n          ...state,\n          cartItems: [\n            ...state.cartItems,\n            newItem\n          ]\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [\n            ...state.cartItems.slice(0, itemIndex),\n            newItem,\n            ...state.cartItems.slice(itemIndex + 1)\n          ]\n        };\n      }\n\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}